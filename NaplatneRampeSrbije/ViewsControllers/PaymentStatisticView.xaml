<Window x:Class="NaplatneRampeSrbije.ViewsControllers.PaymentCountStatisticView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NaplatneRampeSrbije.ViewsControllers"
        mc:Ignorable="d"
        Title="Statistika Broja Naplata" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Background="Black"
        WindowStyle="None">
    <Grid>
        <DatePicker 
            x:Name="chosenDatePicker" 
            HorizontalAlignment="Left" 
            Margin="49,132,0,0" 
            VerticalAlignment="Top" 
            Height="35" 
            Width="145">
            <DatePicker.CalendarStyle>
                <Style TargetType="{x:Type Calendar}">
                    <Style.Setters>
                        <Setter Property="Background" Value="Black" />
                    </Style.Setters>
                </Style>
            </DatePicker.CalendarStyle>
        </DatePicker>
        <Button 
            Content="Generisi izvestaj" 
            HorizontalAlignment="Left"
            Margin="379,132,0,0" 
            VerticalAlignment="Top" 
            Height="37" 
            Width="120" 
            Click="generateReport_Click" />
        <Label
            FontStyle="Italic" 
            FontSize="20" 
            Content="Broj izvršenih naplata: "
            HorizontalAlignment="Left"
            Margin="49,224,0,0"
            VerticalAlignment="Top" 
            Width="220" />
        <Label 
            FontStyle="Italic" 
            FontSize="20"
            Content="Ukupan iznos naplata: "
            HorizontalAlignment="Left" 
            Margin="49,271,0,0"
            VerticalAlignment="Top"
            Width="220" />
        <Label 
            x:Name="paymentSumLabel" 
            FontWeight="SemiBold" 
            FontSize="20" 
            Content="" 
            HorizontalAlignment="Left" 
            Margin="269,224,0,0"
            VerticalAlignment="Top" />
        <Label 
            x:Name="earningsSumLabel" 
            FontWeight="SemiBold" 
            FontSize="20"
            Content="" 
            HorizontalAlignment="Left"
            Margin="269,271,0,0"
            VerticalAlignment="Top" />
        <Label 
            Content="Valuta" 
            HorizontalAlignment="Left" 
            Margin="228,106,0,0" 
            VerticalAlignment="Top"/>
        <ComboBox 
            HorizontalAlignment="Left" 
            Margin="228,132,0,0"
            VerticalAlignment="Top" 
            Width="122" 
            Height="35"
            x:Name="currencyComboBox">
            <ComboBox.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="{StaticResource MainColor}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource PushedColor}" />
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="ComboBox.Static.Background" Color="{StaticResource MainColor}" />
                <SolidColorBrush x:Key="ComboBox.Static.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
                <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
                <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
                <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="{StaticResource PushedColor}" Offset="0.0"/>
                    <GradientStop Color="{StaticResource PushedColor}" Offset="1.0"/>
                </LinearGradientBrush>
                <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="{StaticResource PushedColor}"/>
                <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="{StaticResource PushedColor}" Offset="0.0"/>
                    <GradientStop Color="{StaticResource PushedColor}" Offset="1.0"/>
                </LinearGradientBrush>
                <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
                <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="{StaticResource PushedColor}" Offset="0.0"/>
                    <GradientStop Color="{StaticResource PushedColor}" Offset="1.0"/>
                </LinearGradientBrush>
                <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="{StaticResource PushedColor}"/>
                <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="{StaticResource PushedColor}" Offset="0.0"/>
                    <GradientStop Color="{StaticResource PushedColor}" Offset="1.0"/>
                </LinearGradientBrush>
                <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="{StaticResource PushedColor}"/>
                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
                <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="{StaticResource PushedColor}"/>
                <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="ClickMode" Value="Press"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                        <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
            </ComboBox.Resources>
            <ComboBox.Template>
                <ControlTemplate TargetType="{x:Type ComboBox}" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" >
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ComboBox.Template>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBrush}"/>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Button
                x:Name="goBackButton"
                Content="Idi nazad"
                Click="goBackButton_Click"
                Margin="49,370,606,42" />
    </Grid>
</Window>